	<launch>
  <arg name="debug" default="false"/>
  <arg name="robot_state_pub_frequency" default="250"/>
  <arg name="joint_state_pub_frequency" default="125"/>
  <!-- Specify if the system has "both" hands, only "right", or only "left" -->
  <arg name="hands" default="both"/>
  <arg name="arm_ctrl" default="true"/>	
  <!-- ROBOT CONFIG-->
  <arg name="robot_model" default="ur10"/>
  <!-- HANDS AND ARMS -->
  <arg name="robot_description" if="$(eval not arg('hands') == 'none' and arg('arm_ctrl'))" default="$(find sr_multi_description)/urdf/bimanual_srhand_$(arg robot_model).urdf.xacro"/>
  <arg name="robot_config_file" if="$(eval not arg('hands') == 'none' and arg('arm_ctrl'))" default="$(find sr_multi_moveit_config)/config/robot_configs/bimanual_sh_$(arg robot_model).yaml"/>
  <!-- ARMS BUT NO HANDS -->
  <arg name="robot_description" if="$(eval arg('hands') == 'none' and arg('arm_ctrl'))" default="$(find sr_multi_description)/urdf/bimanual_$(arg robot_model).urdf.xacro"/>
  <arg name="robot_config_file" if="$(eval arg('hands') == 'none' and arg('arm_ctrl'))" default="$(find sr_multi_moveit_config)/config/robot_configs/bimanual_$(arg robot_model).yaml"/>
  <!-- HANDS BUT NO ARMS -->
  <arg name="robot_description" if="$(eval not arg('hands') == 'none' and not arg('arm_ctrl'))" default="$(find sr_description)/robots/bimanual_shadowhand_motor_plus.urdf.xacro"/>
  <arg name="robot_config_file" if="$(eval not arg('hands') == 'none' and not arg('arm_ctrl'))" default="$(find sr_multi_moveit_config)/config/robot_configs/bimanual_sh.yaml"/>


  <!-- setting this parameter to true allows to load the robot_description from a lower level -->
  <arg name="load_robot_description_at_lower_level" default="false"/>

  <!-- HANDS CONFIG-->
  <arg name="rh_serial" default="1370"/>
  <arg name="lh_serial" default="2346"/>
  <arg name="rh_mapping_path" default="$(find sr_edc_launch)/mappings/default_mappings/rh_E_v3.yaml"/>
  <arg name="lh_mapping_path" default="$(find sr_edc_launch)/mappings/default_mappings/lh_E_v3.yaml"/>
  <!-- Allows to specify the ethernet interface/s to be used. It defaults to the value of the env var ETHERCAT_PORT
       More than one interface can be specified by concatenating them using underscore as a separator (e.g eth1_eth2_eth3) -->
  <arg name="eth_port" default="$(optenv ETHERCAT_PORT eth0)"/>
  <!-- The control mode PWM (true) or torque (false) -->
  <arg name="pwm_control" default="true"/>
  <arg name="hand_trajectory" unless="$(eval hands == 'none')" value="true"/>
  <arg name="hand_trajectory" if="$(eval hands == 'none')" value="false"/>

  <!-- ARMS CONFIG-->
  <arg name="arm_1_z" default="0.7551"/>
  <arg name="arm_2_z" default="0.7551"/>
  <arg name="arm_x_separation" default="-0.4" if="$(eval not arg('hands') == 'none' and not arg('arm_ctrl'))"/>
  <arg name="arm_x_separation" default="0.0" unless="$(eval not arg('hands') == 'none' and not arg('arm_ctrl'))"/>
  <arg name="arm_y_separation" default="1.5"/>
  <arg name="arm_robot_hw_1" default="$(find sr_robot_launch)/config/right_ur_arm_robot_hw.yaml"/>
  <arg name="arm_robot_hw_2" default="$(find sr_robot_launch)/config/left_bimanual_ur_arm_robot_hw.yaml"/>
  <!-- When cyberglove is used set "include_wrist_in_arm_controller:=false" as the wrist joints are part of the arm by default-->
  <!-- This will include the wrist joints in the hand controller and exclude them from the arm one -->
  <arg name="include_wrist_in_arm_controller" default="true" if="$(arg arm_ctrl)"/>
  <arg name="include_wrist_in_arm_controller" default="false" unless="$(arg arm_ctrl)"/>
  <arg name="urcap_program_name" default="external_ctrl.urp"/>

  <arg name="arm_trajectory" default="true"/>
  <!-- Set to true to spawn the position controllers for the arm-->
  <arg name="arm_position" default="$(eval not arm_trajectory)"/>
  <arg name="right_arm_speed_scale" default="0.5"/>
  <arg name="left_arm_speed_scale" default="0.5"/>

  <arg name="kinematics_config_left" if="$(eval not arg('robot_model') == 'ur10')" default="$(find ur_description)/config/ur10_default.yaml"/>
  <arg name="kinematics_config_left" if="$(eval not arg('robot_model') == 'ur10e')" default="$(find ur_e_description)/config/ur10e_default.yaml"/>
  <arg name="kinematics_config_right" if="$(eval not arg('robot_model') == 'ur10')" default="$(find ur_description)/config/ur10_default.yaml"/>
  <arg name="kinematics_config_right" if="$(eval not arg('robot_model') == 'ur10e')" default="$(find ur_e_description)/config/ur10e_default.yaml"/>

  <arg name="load_robot_description_command" default="xacro $(arg robot_description) arm_1_z:=$(arg arm_1_z) arm_2_z:=$(arg arm_2_z) arm_x_separation:=$(arg arm_x_separation) arm_y_separation:=$(arg arm_y_separation) kinematics_config_right:=$(arg kinematics_config_right) kinematics_config_left:=$(arg kinematics_config_left)"/>



  <!-- Constructs robot description string and loads it -->
  <node unless="$(arg load_robot_description_at_lower_level)" name="construct_robot_description" pkg="sr_robot_launch" type="construct_robot_description" output="screen">
    <param name="arm_type" value="$(arg robot_model)"/>
    <param name="robot_description_file" value="$(arg robot_description)"/>
    <param name="arm_1_z" value="$(arg arm_1_z)"/>
    <param name="arm_2_z" value="$(arg arm_2_z)"/>
    <param name="arm_x_separation" value="$(arg arm_x_separation)"/>
    <param name="arm_y_separation" value="$(arg arm_y_separation)"/>
  </node>
</launch>
